import { 
  MapPin, 
  Users, 
  MessageSquare, 
  ShieldAlert, 
  Star, 
  Package,
  Heart,
  AlertTriangle,
  CheckCircle,
  Clock
} from 'lucide-react'
import type { MapPoint } from '../model/types'
import { formatDistance } from '../lib/distanceCalc'

interface MapPointDetailsProps {
  point: MapPoint
  distance?: number
  onClose?: () => void
  onInteract?: (point: MapPoint) => void
}

export function MapPointDetails({ point, distance, onClose, onInteract }: MapPointDetailsProps) {
  const { metadata, status } = point

  // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  const getBgColor = () => {
    if (metadata?.danger_level) {
      switch (metadata.danger_level) {
        case 'high':
        case 'extreme':
          return 'from-red-900/40 to-zinc-900/40'
        case 'medium':
          return 'from-orange-900/40 to-zinc-900/40'
        default:
          return 'from-zinc-900/40 to-zinc-800/40'
      }
    }
    return 'from-zinc-900/40 to-zinc-800/40'
  }

  // –ò–∫–æ–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
  const getStatusIcon = () => {
    switch (status) {
      case 'researched':
        return <CheckCircle className="w-5 h-5 text-emerald-400" />
      case 'discovered':
        return <Clock className="w-5 h-5 text-blue-400" />
      default:
        return <MapPin className="w-5 h-5 text-zinc-400" />
    }
  }

  return (
    <div className={`
      fixed bottom-0 left-0 right-0 md:relative md:bottom-auto
      bg-gradient-to-br ${getBgColor()}
      backdrop-blur-lg border border-zinc-700
      rounded-t-2xl md:rounded-2xl
      p-6 shadow-2xl
      max-w-2xl mx-auto
      z-50
    `}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-start justify-between mb-4">
        <div className="flex-1">
          <div className="flex items-center gap-2 mb-2">
            {getStatusIcon()}
            <h2 className="text-2xl font-bold text-zinc-100">{point.title}</h2>
          </div>
          
          {distance !== undefined && (
            <p className="text-sm text-zinc-400 flex items-center gap-1">
              <MapPin className="w-4 h-4" />
              {formatDistance(distance)}
            </p>
          )}
        </div>

        {onClose && (
          <button
            onClick={onClose}
            className="text-zinc-400 hover:text-zinc-100 transition-colors"
          >
            ‚úï
          </button>
        )}
      </div>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <p className="text-zinc-300 mb-4">{point.description}</p>

      {/* –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ */}
      {metadata?.atmosphere && (
        <div className="mb-4 p-3 bg-zinc-900/50 border border-zinc-700/50 rounded-lg">
          <p className="text-sm text-zinc-400 italic">
            üí≠ {metadata.atmosphere}
          </p>
        </div>
      )}

      {/* –§—Ä–∞–∫—Ü–∏—è */}
      {metadata?.faction && (
        <div className="mb-4">
          <div className="flex items-center gap-2 text-sm">
            <ShieldAlert className="w-4 h-4 text-amber-400" />
            <span className="text-zinc-400">–§—Ä–∞–∫—Ü–∏—è:</span>
            <span className="text-amber-400 font-semibold">
              {getFactionName(metadata.faction)}
            </span>
          </div>
        </div>
      )}

      {/* NPC –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ */}
      {metadata?.characterName && (
        <div className="mb-4 p-3 bg-blue-900/20 border border-blue-700/50 rounded-lg">
          <div className="flex items-center gap-2">
            <Users className="w-5 h-5 text-blue-400" />
            <div>
              <p className="text-sm text-zinc-400">NPC:</p>
              <p className="text-blue-400 font-semibold">{metadata.characterName}</p>
            </div>
          </div>
        </div>
      )}

      {/* –°–µ—Ä–≤–∏—Å—ã */}
      {metadata?.services && metadata.services.length > 0 && (
        <div className="mb-4">
          <h3 className="text-sm font-semibold text-zinc-400 mb-2 flex items-center gap-2">
            <Package className="w-4 h-4" />
            –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏:
          </h3>
          <div className="flex flex-wrap gap-2">
            {metadata.services.map(service => (
              <span
                key={service}
                className="px-3 py-1 bg-emerald-900/30 border border-emerald-700/50 text-emerald-400 text-xs rounded-full"
              >
                {getServiceName(service)}
              </span>
            ))}
          </div>
        </div>
      )}

      {/* –£—Ä–æ–≤–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
      {metadata?.danger_level && (
        <div className="mb-4 p-3 bg-red-900/20 border border-red-700/50 rounded-lg">
          <div className="flex items-center gap-2">
            <AlertTriangle className="w-5 h-5 text-red-400" />
            <div>
              <p className="text-sm text-zinc-400">–£—Ä–æ–≤–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</p>
              <p className={`font-semibold ${getDangerColor(metadata.danger_level)}`}>
                {getDangerLabel(metadata.danger_level)}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –û–ø–∞—Å–Ω–æ—Å—Ç–∏ (–¥–ª—è –∞–Ω–æ–º–∞–ª–∏–π) */}
      {metadata?.hazards && (
        <div className="mb-4 p-3 bg-purple-900/20 border border-purple-700/50 rounded-lg">
          <h3 className="text-sm font-semibold text-purple-400 mb-2">‚ö†Ô∏è –û–ø–∞—Å–Ω–æ—Å—Ç–∏:</h3>
          <ul className="text-sm text-zinc-300 space-y-1">
            {metadata.hazards.radiation && (
              <li>‚ò¢Ô∏è –†–∞–¥–∏–∞—Ü–∏—è: <span className={getHazardColor(metadata.hazards.radiation)}>{metadata.hazards.radiation}</span></li>
            )}
            {metadata.hazards.temporal_distortion && (
              <li>üåÄ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å–∫–∞–∂–µ–Ω–∏—è: <span className={getHazardColor(metadata.hazards.temporal_distortion)}>{metadata.hazards.temporal_distortion}</span></li>
            )}
            {metadata.hazards.hostile_entities && (
              <li>üëæ –í—Ä–∞–∂–¥–µ–±–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤–∞: <span className={getHazardColor(metadata.hazards.hostile_entities)}>{metadata.hazards.hostile_entities}</span></li>
            )}
          </ul>
        </div>
      )}

      {/* –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ */}
      {(metadata?.minReputation || metadata?.unlockRequirements) && (
        <div className="mb-4 p-3 bg-amber-900/20 border border-amber-700/50 rounded-lg">
          <h3 className="text-sm font-semibold text-amber-400 mb-2">üîí –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h3>
          {metadata.minReputation && (
            <p className="text-sm text-zinc-300">
              <Heart className="w-4 h-4 inline mr-1" />
              –†–µ–ø—É—Ç–∞—Ü–∏—è: {metadata.minReputation}
            </p>
          )}
          {metadata.unlockRequirements && (
            <ul className="text-sm text-zinc-300 mt-2 space-y-1">
              {metadata.unlockRequirements.map((req, idx) => (
                <li key={idx}>‚Ä¢ {req}</li>
              ))}
            </ul>
          )}
        </div>
      )}

      {/* –ù–∞–≥—Ä–∞–¥—ã (–¥–ª—è –∞–Ω–æ–º–∞–ª–∏–π) */}
      {metadata?.rewards && (
        <div className="mb-4 p-3 bg-yellow-900/20 border border-yellow-700/50 rounded-lg">
          <h3 className="text-sm font-semibold text-yellow-400 mb-2">üíé –í–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:</h3>
          <ul className="text-sm text-zinc-300 space-y-1">
            {metadata.rewards.artifacts && <li>‚ú® –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã</li>}
            {metadata.rewards.rareResources && <li>üí∞ –†–µ–¥–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã</li>}
            {metadata.rewards.scientificData && <li>üìä –ù–∞—É—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</li>}
          </ul>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex gap-3 mt-6">
        {status === 'discovered' && onInteract && (
          <button
            onClick={() => onInteract(point)}
            className="flex-1 px-4 py-3 bg-gradient-to-r from-emerald-600 to-emerald-700 hover:from-emerald-500 hover:to-emerald-600 text-white font-semibold rounded-lg transition-all duration-200 shadow-lg"
          >
            üîç –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å
          </button>
        )}

        {metadata?.dialogues && metadata.dialogues.length > 0 && (
          <button
            className="flex-1 px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-500 hover:to-blue-600 text-white font-semibold rounded-lg transition-all duration-200 shadow-lg flex items-center justify-center gap-2"
          >
            <MessageSquare className="w-5 h-5" />
            –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å
          </button>
        )}

        {metadata?.services?.includes('trade' as any) && (
          <button
            className="flex-1 px-4 py-3 bg-gradient-to-r from-amber-600 to-amber-700 hover:from-amber-500 hover:to-amber-600 text-white font-semibold rounded-lg transition-all duration-200 shadow-lg"
          >
            üí∞ –¢–æ—Ä–≥–æ–≤–∞—Ç—å
          </button>
        )}
      </div>
    </div>
  )
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getFactionName(faction: string): string {
  const factionNames: Record<string, string> = {
    synthesis: '–°–∏–Ω—Ç–µ–∑',
    fjr: 'FJR (–í–æ–ª—å–Ω—ã–µ –µ–≥–µ—Ä—è)',
    old_believers: '–°—Ç–∞—Ä–æ–æ–±—Ä—è–¥—Ü—ã',
    anarchists: '–ê–Ω–∞—Ä—Ö–∏—Å—Ç—ã',
    neutral: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è'
  }
  return factionNames[faction] || faction
}

function getServiceName(service: string): string {
  const serviceNames: Record<string, string> = {
    trade: '–¢–æ—Ä–≥–æ–≤–ª—è',
    storage: '–•—Ä–∞–Ω–∏–ª–∏—â–µ',
    repair: '–†–µ–º–æ–Ω—Ç',
    crafting: '–ö—Ä–∞—Ñ—Ç',
    upgrade: '–£–ª—É—á—à–µ–Ω–∏–µ',
    healing: '–õ–µ—á–µ–Ω–∏–µ',
    medicine_trade: '–¢–æ—Ä–≥–æ–≤–ª—è –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∞–º–∏',
    first_aid_training: '–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏',
    quests: '–ö–≤–µ—Å—Ç—ã',
    recruitment: '–í–µ—Ä–±–æ–≤–∫–∞',
    news: '–ù–æ–≤–æ—Å—Ç–∏',
    blessing: '–ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ',
    confession: '–ò—Å–ø–æ–≤–µ–¥—å',
    shelter: '–£–±–µ–∂–∏—â–µ',
    black_market: '–ß—ë—Ä–Ω—ã–π —Ä—ã–Ω–æ–∫',
    underground_intel: '–ü–æ–¥–ø–æ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
    refuge: '–£–∫—Ä—ã—Ç–∏–µ',
    information: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
    rumors: '–°–ª—É—Ö–∏',
    rest: '–û—Ç–¥—ã—Ö',
    drinks: '–ù–∞–ø–∏—Ç–∫–∏',
    exploration: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ',
    artifact_hunting: '–û—Ö–æ—Ç–∞ –∑–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏'
  }
  return serviceNames[service] || service
}

function getDangerLabel(level: string): string {
  const labels: Record<string, string> = {
    low: '–ù–∏–∑–∫–∏–π',
    medium: '–°—Ä–µ–¥–Ω–∏–π',
    high: '–í—ã—Å–æ–∫–∏–π',
    extreme: '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π'
  }
  return labels[level] || level
}

function getDangerColor(level: string): string {
  const colors: Record<string, string> = {
    low: 'text-yellow-400',
    medium: 'text-orange-400',
    high: 'text-red-400',
    extreme: 'text-purple-400'
  }
  return colors[level] || 'text-zinc-400'
}

function getHazardColor(level: string): string {
  const colors: Record<string, string> = {
    low: 'text-yellow-400',
    medium: 'text-orange-400',
    high: 'text-red-400'
  }
  return colors[level] || 'text-zinc-400'
}


